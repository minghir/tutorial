float Circle(vec2 uv,vec2 pos,float r){
   uv +=pos;   
   float d = length(uv) - r;
   d = step(.1,d);
   return 1.-d;
    
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
    // Normalized pixel coordinates (from 0 to 1)
    vec2 uv = (fragCoord-.5*iResolution.xy)/iResolution.y;
    // Time varying pixel color
  //  vec3 col = 0.5 + 0.5*cos(iTime+uv.xyx+vec3(0,2,4));
  
  float c1 = Circle(uv,vec2(0.),.2);
  
  vec3 col  = vec3(
        step(0.,sin(fragCoord.x/0.01)+.999))*step(0.,vec3(sin(fragCoord.y/0.01)+.999)
        );
    // Output to screen
    fragColor = vec4(col-c1,1.0);
}


float bckgr(vec2 uv){
    return 
        smoothstep(0.,0.01*2.*iResolution.x/iResolution.y,
       (cos(uv.x/.03)+0.999)*(cos(uv.y/.03)+0.999)
        )/.3;
}
